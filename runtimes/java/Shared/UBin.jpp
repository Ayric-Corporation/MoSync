/* Copyright 2013 David Axmark

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

#ifdef _android
package com.mosync.java.android;

import android.util.Log;
import android.content.res.AssetFileDescriptor;
#endif

#include "helpers.h"

import java.io.*;

final class UBin extends BinaryInterface {

	private final int mOffset, mSize;

#ifdef _JavaME
	private final String mFilename;
	public UBin(final String filename, int offset, int size) {
		mFilename = filename;
#elif defined(_android)
	private Core mCore;
	public UBin(Core core, int offset, int size) {
		mCore = core;
#endif
		mOffset = offset;
		mSize = size;
		if(mSize < 0 || mOffset < 0)
			throw new IllegalArgumentException(IN_FILE_ON_LINE_STRING);
	}
	public final int size() {
		return mSize;
	}
	public final InputStream getInputStream(int offset, int size) throws IOException {
		//DEBUG_ALWAYS("uGIS "+filename+"\n");
#ifdef _JavaME
		InputStream in = GET_RESOURCE(mFilename);
#elif defined(_android)
		InputStream in = new LittleEndianDataInputStream(mCore.mContext.getResources().openRawResource(R.raw.resources));
#endif
		MYASSERT(in != null);
		MYASSERT(size <= mSize);
		offset += mOffset;
		MYASSERT(offset >= 0);
		while(offset > 0) {
			long res = in.skip(offset);
			if(res > offset || res == 0) {
				DEBUG_ALWAYS("skip("+offset+") = "+res+"\n");
				BIG_PHAT_ERROR;
			}
			offset -= res;
		}
		return new LimitedLengthInputStream(in, size);
	}

#ifdef OLD_MEMCPY
	public final OutputStream getOutputStream(int offset) throws IOException {
		BIG_PHAT_ERROR;
	}
#endif
}
