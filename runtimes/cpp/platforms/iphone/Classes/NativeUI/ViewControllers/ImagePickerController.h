/* Copyright 2013 David Axmark

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

#import <Foundation/Foundation.h>
#import "helpers/cpp_defs.h"

/**
 * Dispalys an image piker to the user.
 */
@interface ImagePickerController :  NSObject<UINavigationControllerDelegate,UIImagePickerControllerDelegate,UIPopoverControllerDelegate> {

    UIImagePickerController* mImagePicker;
}

/**
 * Returns an instance to the shared singleton.
 * @return The shared object.
 */
+(ImagePickerController*) getInstance;

/**
 * Releases the class instance.
 */
+(void) deleteInstance;

/**
 * Shows the image picker to the user.
 */
-(void) show;

/**
 * Hides the image picker.
 * The previous view will be shown.
 */
-(void) hide;

/**
 * The user has picked an image.
 * From UIImagePickerControllerDelegate.
 * @param picker The controller object managing the image picker interface.
 * @param info A dictionary containing the picked image.
 */
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info;

/**
 * The user has cancelled the pick operation on an iPhone.
 * @param picker The controller object managing the image picker interface.
 */
- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker;

/**
 * The user has cancelled the pick operation on an iPad.
 * @param picker The controller object managing the popover window.
 */
- (void)popoverControllerDidDismissPopover:(UIPopoverController *)popover;

/**
 * Gets an image handle for a given image.
 * @param image The given image.
 * @return A image handle or RES_OUT_OF_MEMORY in case of error.
 */
- (MAHandle)getImageHandle:(UIImage*)image;

/**
 * Gets an image data handle for a given image.
 * @param image The given image.
 * @return A image data handle or RES_OUT_OF_MEMORY in case of error.
 */
- (MAHandle)getImageDataHandle:(UIImage*)image;

/*
 * Property that states if the event generated by a image selection
 * will hold an image handle or a encoded image.
 */
@property int returnDataType;

@end
