/* Copyright 2013 David Axmark

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

/**
 * @file NativeUIMessageHandler.h
 * @author Ali Sarrafi
 *
 * Implementation of NativeUI calls made from JavaScript.
 */

#ifndef NATIVEUI_MESSAGE_HANDLER_H_
#define NATIVEUI_MESSAGE_HANDLER_H_

#include <Wormhole/WebViewMessage.h>
#include <NativeUI/WebView.h>
#include <MAUtil/String.h>
#include <Wormhole/MessageStream.h>
/**
 * Class that implements JavaScript calls.
 *
 * The JavaScript side is in file extendedbridge.js.
 */
class NativeUIMessageHandler:
	public MAUtil::CustomEventListener
{
public:
	/**
	 * Constructor.
	 */
	NativeUIMessageHandler(NativeUI::WebView* webView);

	/**
	 * Destructor.
	 */
	virtual ~NativeUIMessageHandler();

	/**
	 * Implementation of standard API exposed to JavaScript.
	 * @return true if message was handled, false if not.
	 */
	bool handleMessage(Wormhole::MessageStream& message);

	/**
	 * Handles custom events generated by NativeUI Widgets.
	 */
	virtual void customEvent(const MAEvent&);



private:
	/**
	 * A Pointer to the main webview
	 * Used for communicating with NativeUI
	 */
	NativeUI::WebView* mWebView;

	/**
	 * General wrapper for NativeUI success callback.
	 * If an operation is successful this function should be called.
	 *
	 * @param data the data that should be passed to the callback function
	 */
	void sendNativeUISuccess(const char* data);

	/**
	 * General wrapper for NativeUI error callback.
	 * If an operation is successful this function should be called.
	 *
	 * @param data the data that should be passed to the callback function
	 */
	void sendNativeUIError(const char* data);

};

#endif
